# Status & Changelog

## Current Version: 1.0.0 (Production)

**Status:** Phase 5 Complete - NPM Packaging & Release (Complete)

The plugin has been successfully published to npm and includes a working live demo. This is now a stable, production-ready release.

---

## Version History

### v1.0.0 (Production) - Current
**Phase 5: NPM Packaging & Release**

#### âœ… Completed
- **NPM Package**
  - Published to npm as `@robingamedev/visual-novel-dialogue`
  - Version 0.5.2 with proper TypeScript declarations
  - Configured exports for bundler compatibility
  - Includes comprehensive README with usage examples

- **Live Demo**
  - Deployed to GitHub Pages at `https://robingamedev.github.io/phaser-library-visual-novel-dialogue/demo/`
  - Working demo with character sprites, audio, and full dialogue system
  - GitHub Actions workflow for automated deployment
  - Proper build and deployment pipeline

- **Documentation**
  - Enhanced README with comprehensive usage examples
  - API documentation with configuration options
  - Event hook examples and JSON structure guides
  - Installation and quick start instructions

#### ðŸš§ Next Up
- **Phase 6: Post-Release Maintenance**
  - Monitor for bugs and developer feedback
  - Keep documentation up to date
  - Consider feature requests and improvements

---

### v0.5.2 (Development) - Previous
**Phase 4: Demo Project**

#### âœ… Completed
- **Core Plugin Implementation**
  - Complete dialogue system with JSON parsing
  - Typewriter text effects with configurable speed
  - Inline formatting support (`{style=value}` and `{audio=value}`)
  - Vertical choice system with clickable buttons
  - Character show/hide commands with emotion support
  - Box positioning (`bottom`, `top`, `center`)
  - Event system (`onLineEnd`, `onChoice`, `onEnd`, `onShow`, `onHide`)
  - Debug mode with comprehensive logging
  - Style persistence and audio playback during typewriter

- **Demo Project**
  - Full TypeScript Phaser demo with Vite
  - Character sprite management with emotion switching
  - Background and audio asset integration
  - Keyboard controls (SPACE advance/skip, ESC skip typewriter)
  - Mouse interaction for choices
  - JSON-based dialogue loading (`demo.json`)
  - Restart functionality

- **Developer Experience**
  - Comprehensive error handling and validation
  - Graceful fallbacks for unknown commands
  - Multiple dialogue file support
  - Configurable styling and audio systems
  - Clean API surface with proper TypeScript types

---

### v0.2.0 (Development) - Previous
**Phase 2: Core Plugin Development**

#### âœ… Completed
- **Core Plugin Implementation**
  - Complete dialogue system with JSON parsing
  - Typewriter text effects with configurable speed
  - Inline formatting support (`{style=value}` and `{audio=value}`)
  - Vertical choice system with clickable buttons
  - Character show/hide commands with emotion support
  - Box positioning (`bottom`, `top`, `center`)
  - Event system (`onLineEnd`, `onChoice`, `onEnd`, `onShow`, `onHide`)
  - Debug mode with comprehensive logging
  - Style persistence and audio playback during typewriter

---

### v0.1.0 (Development) - Previous
**Phase 1: Planning & Documentation**

#### âœ… Completed
- **Core Design Decisions**
  - Defined JSON structure (`settings` and `script`)
  - Chose supported commands (`jump`, `end`, `Choice`, `show`, `hide`)
  - Locked in runtime API surface (`start`, `jumpTo`, `pause`, `resume`)
  - Defined config system (`fontFamily`, `boxStyle`, `typeSpeed`, `autoForward`, `styles`, `audio`, `boxAnimationSpeed`, `boxPosition`)
  - Set plugin boundaries (no conditionals, no rollback, no i18n, no multiple dialogue boxes)

- **Documentation**
  - `overview.mdc` â€” plugin summary and architecture
  - `json-format.mdc` â€” JSON structure, commands, formatting, audio
  - `usage.mdc` â€” setup, API, full integration, multi-file support, visual hooks
  - Advanced examples with `{style=}`, `{audio=}`, `show`, `hide`, and `Choice`
  - Credits and license included
  - This roadmap file (`todo.mdc`)
  - Status tracking (`status.mdc`)
  - Basic README.md

---

## Planned Features

### v1.1.0 (Future)
**Phase 6: Post-Release Maintenance**
- Community feedback integration
- Performance optimizations
- Additional configuration options

---

## Development Notes

- **Architecture:** Scene Plugin for Phaser 3
- **Rendering:** Custom Phaser UI elements (canvas-native)
- **Positioning:** Fixed position with preset anchors (`bottom`, `top`, `center`)
- **Text Overflow:** Vertical clamping (no scrolling)
- **Style System:** Simple `{style=value}` tags with no inheritance
- **Audio:** Inline `{audio=value}` triggers
- **Demo:** Full TypeScript demo with Vite, character sprites, and audio
- **NPM Package:** `@robingamedev/visual-novel-dialogue@0.5.2`
- **Live Demo:** `https://robingamedev.github.io/phaser-library-visual-novel-dialogue/demo/`

---

## Breaking Changes

None - plugin is now stable and production-ready.

---

## Known Issues

None currently identified - all core functionality is working as expected.

---

## Contributing

This plugin is now in production. Please report issues on GitHub and check the documentation for usage examples.

---

*Last updated: Phase 5 completion - Production Release*


---

*Last updated: Phase 2 & 4 completion*

